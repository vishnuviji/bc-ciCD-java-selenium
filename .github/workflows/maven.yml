# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# https://github.com/sridharbandi/bcmar22-aws-java-selenium


#Workflow Name of project here
name: Selenium Java Tests

#Triggers here -- eg when to execute the yaml file.
on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main" ]

jobs:
  #build: 
  #-- means Job name - what we are going to do --so i used tst instead of build
  test:

    runs-on: ubuntu-latest #system used to execute my project from cloud

    steps: #steps or actions to be done
    - uses: actions/checkout@v4 #uses  will say action. here checkout action will download the particular code
    - name: Set up JDK 17 #java setup action
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Run the test # now we are going to execute the test
      run: mvn clean test
      
    - name: Upload reports #To upload the reports in reports folder
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-result
        path: target/reports
        
    - name: Deploy to GitHub Pages #To deploy the reports page in github pages (here give write permision in settings -- general-- give permission to read and write)
      if: always() #instead of always we can use if success -- if i want to exectue only during success
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: target/reports #path of the report page

  
